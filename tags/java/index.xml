<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Sean&#39;s Blog</title>
    <link>https://tsaisean.github.io/tags/java/</link>
    <description>Recent content in Java on Sean&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 01 Dec 2024 12:00:00 +0000</lastBuildDate><atom:link href="https://tsaisean.github.io/tags/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Back to Java Fundamentals</title>
      <link>https://tsaisean.github.io/tech/2024-12-15-back-to-java-fundamentals/</link>
      <pubDate>Sun, 01 Dec 2024 12:00:00 +0000</pubDate>
      
      <guid>https://tsaisean.github.io/tech/2024-12-15-back-to-java-fundamentals/</guid>
      <description>1. Types Type Size (Bits) Default Value Range Example byte 8 0 -128 to 127 byte b = 10; short 16 0 -32,768 to 32,767 short s = 100; int 32 0 -2,147,483,648 to 2,147,483,647 int i = 12345; long 64 0L -2^63 to (2^63)-1 long l = 123456L; float 32 0.0f ~7 decimal digits float f = 3.14f; double 64 0.0d ~16 decimal digits double d = 3.14; char 16 &amp;lsquo;\u0000&amp;rsquo; 0 to 65,535 (Unicode) char c = &#39;A&#39;; boolean 1 bit (logical) false true or false boolean b = true; 1.</description>
    </item>
    
    <item>
      <title>How to invoke a method in the jar?</title>
      <link>https://tsaisean.github.io/tech/2022-08-12-how-to-invoke-a-method-in-the-jar/</link>
      <pubDate>Fri, 12 Aug 2022 12:00:00 +0000</pubDate>
      
      <guid>https://tsaisean.github.io/tech/2022-08-12-how-to-invoke-a-method-in-the-jar/</guid>
      <description>We can use URLClassLoader to load classes from a given path.
URL myJar = new File(&amp;#34;jar/LibraryA-1.0-SNAPSHOT.jar&amp;#34;).toURI().toURL(); URLClassLoader clsLoader = new URLClassLoader( new URL[] {myJar}, this.getClass().getClassLoader() ); Class&amp;lt;?&amp;gt; loadedClass = clsLoader.loadClass(&amp;#34;com.sean.liba.Main&amp;#34;); Method method = loadedClass.getDeclaredMethod(&amp;#34;print&amp;#34;); Object instance = loadedClass.newInstance(); method.invoke(instance); // Output: Hello World! Let&amp;rsquo;s look at other use cases. What if you have two jars, and liba.jar deppends on another class in the libb.jar?
Take the above example, the print method has a dependency on the com.</description>
    </item>
    
  </channel>
</rss>
