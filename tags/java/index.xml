<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Sean&#39;s Blog</title>
    <link>http://localhost:1313/tags/java/</link>
    <description>Recent content in Java on Sean&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 01 Dec 2024 12:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Back to Java Fundamentals</title>
      <link>http://localhost:1313/tech/2024-12-15-back-to-java-fundamentals/</link>
      <pubDate>Sun, 01 Dec 2024 12:00:00 +0000</pubDate>
      <guid>http://localhost:1313/tech/2024-12-15-back-to-java-fundamentals/</guid>
      <description>&lt;h1 id=&#34;1-types&#34;&gt;1. Types&lt;/h1&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;strong&gt;Type&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;Size (Bits)&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;Default Value&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;Range&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;byte&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;8&lt;/td&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;          &lt;td&gt;-128 to 127&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;byte b = 10;&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;short&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;16&lt;/td&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;          &lt;td&gt;-32,768 to 32,767&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;short s = 100;&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;int&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;32&lt;/td&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;          &lt;td&gt;-2,147,483,648 to 2,147,483,647&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;int i = 12345;&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;long&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;64&lt;/td&gt;&#xA;          &lt;td&gt;0L&lt;/td&gt;&#xA;          &lt;td&gt;-2^63 to (2^63)-1&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;long l = 123456L;&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;float&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;32&lt;/td&gt;&#xA;          &lt;td&gt;0.0f&lt;/td&gt;&#xA;          &lt;td&gt;~7 decimal digits&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;float f = 3.14f;&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;double&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;64&lt;/td&gt;&#xA;          &lt;td&gt;0.0d&lt;/td&gt;&#xA;          &lt;td&gt;~16 decimal digits&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;double d = 3.14;&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;char&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;16&lt;/td&gt;&#xA;          &lt;td&gt;&amp;lsquo;\u0000&amp;rsquo;&lt;/td&gt;&#xA;          &lt;td&gt;0 to 65,535 (Unicode)&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;char c = &#39;A&#39;;&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;1 bit (logical)&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;boolean b = true;&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;11-common-errors-and-pitfalls&#34;&gt;1.1 Common Errors and Pitfalls&lt;/h2&gt;&#xA;&lt;h3 id=&#34;numeric-overflow&#34;&gt;Numeric Overflow&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Cause: Exceeding the range of a numeric type.&lt;/li&gt;&#xA;&lt;li&gt;Example:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Java&#34; data-lang=&#34;Java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd&#34;&gt;byte&lt;/span&gt; b &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; 127;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;b&lt;span style=&#34;color:#ff79c6&#34;&gt;++&lt;/span&gt;; &lt;span style=&#34;color:#6272a4&#34;&gt;// Wraps to -128&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;uninitialized-variables&#34;&gt;Uninitialized Variables&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Cause: Using a local variable without initializing it.&lt;/li&gt;&#xA;&lt;li&gt;Example:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Java&#34; data-lang=&#34;Java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; x;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;System.&lt;span style=&#34;color:#50fa7b&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#50fa7b&#34;&gt;println&lt;/span&gt;(x); &lt;span style=&#34;color:#6272a4&#34;&gt;// Compilation Error&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;missing-type-parameters&#34;&gt;Missing Type Parameters&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Cause: Not specifying type parameters in generics, leading to runtime issues.&lt;/li&gt;&#xA;&lt;li&gt;Example:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Java&#34; data-lang=&#34;Java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;List list &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; ArrayList(); &lt;span style=&#34;color:#6272a4&#34;&gt;// Raw type, can cause ClassCastException&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;list.&lt;span style=&#34;color:#50fa7b&#34;&gt;add&lt;/span&gt;(123);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;String str &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; (String) list.&lt;span style=&#34;color:#50fa7b&#34;&gt;get&lt;/span&gt;(0); &lt;span style=&#34;color:#6272a4&#34;&gt;// Fails at runtime&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;12-string&#34;&gt;1.2 String&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Java&#34; data-lang=&#34;Java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;Test&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;main&lt;/span&gt;(String&lt;span style=&#34;color:#ff79c6&#34;&gt;[]&lt;/span&gt; args) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        String s1 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        String s2 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        String s3 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; String(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        System.&lt;span style=&#34;color:#50fa7b&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#50fa7b&#34;&gt;println&lt;/span&gt;(s1 &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; s2); &lt;span style=&#34;color:#6272a4&#34;&gt;// true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        System.&lt;span style=&#34;color:#50fa7b&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#50fa7b&#34;&gt;println&lt;/span&gt;(s1 &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; s3); &lt;span style=&#34;color:#6272a4&#34;&gt;// false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;&#xA;&lt;li&gt;s1 == s2:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Both s1 and s2 reference the same string literal &amp;ldquo;Hello&amp;rdquo;, which is stored in the string pool.&lt;/li&gt;&#xA;&lt;li&gt;Since both variables point to the same object in memory, s1 == s2 evaluates to true.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;s1 == s3:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;s3 is created with the new keyword, which creates a new object in memory, even though it has the same content as s1.&lt;/li&gt;&#xA;&lt;li&gt;Since s1 and s3 refer to different objects, s1 == s3 evaluates to false.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;13-order-of-operations&#34;&gt;1.3 Order of Operations&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Java follows operator precedence:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Pre/Post-Increment and Decrement (x++, &amp;ndash;y) are evaluated first.&lt;/li&gt;&#xA;&lt;li&gt;Multiplication Divide (* /) is evaluated next.&lt;/li&gt;&#xA;&lt;li&gt;Addition Deduction (+ -) is evaluated last.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to invoke a method in the jar?</title>
      <link>http://localhost:1313/tech/2022-08-12-how-to-invoke-a-method-in-the-jar/</link>
      <pubDate>Fri, 12 Aug 2022 12:00:00 +0000</pubDate>
      <guid>http://localhost:1313/tech/2022-08-12-how-to-invoke-a-method-in-the-jar/</guid>
      <description>&lt;p&gt;We can use &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/net/URLClassLoader.html&#34;&gt;URLClassLoader&lt;/a&gt; to load classes from a given path.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      URL myJar &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; File(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;jar/LibraryA-1.0-SNAPSHOT.jar&amp;#34;&lt;/span&gt;).&lt;span style=&#34;color:#50fa7b&#34;&gt;toURI&lt;/span&gt;().&lt;span style=&#34;color:#50fa7b&#34;&gt;toURL&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      URLClassLoader clsLoader &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; URLClassLoader(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; URL&lt;span style=&#34;color:#ff79c6&#34;&gt;[]&lt;/span&gt; {myJar},&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#50fa7b&#34;&gt;getClass&lt;/span&gt;().&lt;span style=&#34;color:#50fa7b&#34;&gt;getClassLoader&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      Class&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;?&amp;gt;&lt;/span&gt; loadedClass &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; clsLoader.&lt;span style=&#34;color:#50fa7b&#34;&gt;loadClass&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;com.sean.liba.Main&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      Method method &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; loadedClass.&lt;span style=&#34;color:#50fa7b&#34;&gt;getDeclaredMethod&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;print&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      Object instance &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; loadedClass.&lt;span style=&#34;color:#50fa7b&#34;&gt;newInstance&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      method.&lt;span style=&#34;color:#50fa7b&#34;&gt;invoke&lt;/span&gt;(instance);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#6272a4&#34;&gt;// Output: Hello World!&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Let&amp;rsquo;s look at other use cases. What if you have two jars, and &lt;strong&gt;liba.jar&lt;/strong&gt; deppends on another class in the &lt;strong&gt;libb.jar&lt;/strong&gt;?&lt;/p&gt;&#xA;&lt;p&gt;&#xA;  &lt;img src=&#34;http://localhost:1313/img/tech/2022-08-12/1.png&#34; alt=&#34;&#34;&gt;&#xA;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;Take the above example, the &lt;code&gt;print&lt;/code&gt; method has a dependency on the &lt;code&gt;com.sean.libb.Caculator&lt;/code&gt; class.&#xA;If we dont&amp;rsquo;t change the code, and run it again, you will get an error immediately.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
