<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sean&#39;s Blog</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Sean&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 01 Dec 2024 12:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Back to Java Fundamentals</title>
      <link>http://localhost:1313/tech/2024-12-15-back-to-java-fundamentals/</link>
      <pubDate>Sun, 01 Dec 2024 12:00:00 +0000</pubDate>
      <guid>http://localhost:1313/tech/2024-12-15-back-to-java-fundamentals/</guid>
      <description>&lt;h1 id=&#34;1-types&#34;&gt;1. Types&lt;/h1&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;strong&gt;Type&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;Size (Bits)&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;Default Value&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;Range&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;byte&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;8&lt;/td&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;          &lt;td&gt;-128 to 127&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;byte b = 10;&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;short&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;16&lt;/td&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;          &lt;td&gt;-32,768 to 32,767&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;short s = 100;&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;int&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;32&lt;/td&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;          &lt;td&gt;-2,147,483,648 to 2,147,483,647&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;int i = 12345;&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;long&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;64&lt;/td&gt;&#xA;          &lt;td&gt;0L&lt;/td&gt;&#xA;          &lt;td&gt;-2^63 to (2^63)-1&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;long l = 123456L;&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;float&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;32&lt;/td&gt;&#xA;          &lt;td&gt;0.0f&lt;/td&gt;&#xA;          &lt;td&gt;~7 decimal digits&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;float f = 3.14f;&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;double&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;64&lt;/td&gt;&#xA;          &lt;td&gt;0.0d&lt;/td&gt;&#xA;          &lt;td&gt;~16 decimal digits&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;double d = 3.14;&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;char&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;16&lt;/td&gt;&#xA;          &lt;td&gt;&amp;lsquo;\u0000&amp;rsquo;&lt;/td&gt;&#xA;          &lt;td&gt;0 to 65,535 (Unicode)&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;char c = &#39;A&#39;;&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;1 bit (logical)&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;boolean b = true;&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;11-common-errors-and-pitfalls&#34;&gt;1.1 Common Errors and Pitfalls&lt;/h2&gt;&#xA;&lt;h3 id=&#34;numeric-overflow&#34;&gt;Numeric Overflow&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Cause: Exceeding the range of a numeric type.&lt;/li&gt;&#xA;&lt;li&gt;Example:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Java&#34; data-lang=&#34;Java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd&#34;&gt;byte&lt;/span&gt; b &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; 127;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;b&lt;span style=&#34;color:#ff79c6&#34;&gt;++&lt;/span&gt;; &lt;span style=&#34;color:#6272a4&#34;&gt;// Wraps to -128&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;uninitialized-variables&#34;&gt;Uninitialized Variables&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Cause: Using a local variable without initializing it.&lt;/li&gt;&#xA;&lt;li&gt;Example:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Java&#34; data-lang=&#34;Java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; x;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;System.&lt;span style=&#34;color:#50fa7b&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#50fa7b&#34;&gt;println&lt;/span&gt;(x); &lt;span style=&#34;color:#6272a4&#34;&gt;// Compilation Error&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;missing-type-parameters&#34;&gt;Missing Type Parameters&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Cause: Not specifying type parameters in generics, leading to runtime issues.&lt;/li&gt;&#xA;&lt;li&gt;Example:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Java&#34; data-lang=&#34;Java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;List list &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; ArrayList(); &lt;span style=&#34;color:#6272a4&#34;&gt;// Raw type, can cause ClassCastException&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;list.&lt;span style=&#34;color:#50fa7b&#34;&gt;add&lt;/span&gt;(123);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;String str &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; (String) list.&lt;span style=&#34;color:#50fa7b&#34;&gt;get&lt;/span&gt;(0); &lt;span style=&#34;color:#6272a4&#34;&gt;// Fails at runtime&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;12-string&#34;&gt;1.2 String&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Java&#34; data-lang=&#34;Java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;Test&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;main&lt;/span&gt;(String&lt;span style=&#34;color:#ff79c6&#34;&gt;[]&lt;/span&gt; args) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        String s1 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        String s2 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        String s3 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; String(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        System.&lt;span style=&#34;color:#50fa7b&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#50fa7b&#34;&gt;println&lt;/span&gt;(s1 &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; s2); &lt;span style=&#34;color:#6272a4&#34;&gt;// true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        System.&lt;span style=&#34;color:#50fa7b&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#50fa7b&#34;&gt;println&lt;/span&gt;(s1 &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; s3); &lt;span style=&#34;color:#6272a4&#34;&gt;// false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;&#xA;&lt;li&gt;s1 == s2:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Both s1 and s2 reference the same string literal &amp;ldquo;Hello&amp;rdquo;, which is stored in the string pool.&lt;/li&gt;&#xA;&lt;li&gt;Since both variables point to the same object in memory, s1 == s2 evaluates to true.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;s1 == s3:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;s3 is created with the new keyword, which creates a new object in memory, even though it has the same content as s1.&lt;/li&gt;&#xA;&lt;li&gt;Since s1 and s3 refer to different objects, s1 == s3 evaluates to false.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;13-order-of-operations&#34;&gt;1.3 Order of Operations&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Java follows operator precedence:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Pre/Post-Increment and Decrement (x++, &amp;ndash;y) are evaluated first.&lt;/li&gt;&#xA;&lt;li&gt;Multiplication Divide (* /) is evaluated next.&lt;/li&gt;&#xA;&lt;li&gt;Addition Deduction (+ -) is evaluated last.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>The difference between data engineer and data scientist</title>
      <link>http://localhost:1313/tech/2022-08-19-the-difference-between-data-enegineer-and-data-scientist/</link>
      <pubDate>Fri, 19 Aug 2022 12:00:00 +0000</pubDate>
      <guid>http://localhost:1313/tech/2022-08-19-the-difference-between-data-enegineer-and-data-scientist/</guid>
      <description>&lt;h3 id=&#34;data-engineer-vs-data-scientist-a-comparative-overview&#34;&gt;Data Engineer vs Data Scientist: A Comparative Overview&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Role Aspect&lt;/th&gt;&#xA;          &lt;th&gt;Data Engineer&lt;/th&gt;&#xA;          &lt;th&gt;Data Scientist&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Primary Focus&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Building scalable data architectures and maintaining data pipelines.&lt;/td&gt;&#xA;          &lt;td&gt;Extracting insights, identifying patterns, and building predictive models.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Responsibilities&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;ul&gt;&lt;li&gt;Designing systems for large-scale data handling.&lt;/li&gt;&lt;li&gt;Streamlining data acquisition.&lt;/li&gt;&lt;li&gt;Ensuring data quality and integrity.&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;ul&gt;&lt;li&gt;Mining data for patterns and trends.  &lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Applying statistical models.  &lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Building machine learning-based predictive models.&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Tools and Technologies&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Databases&lt;/strong&gt;: SQL, NoSQL  &lt;/li&gt;&lt;li&gt;&lt;strong&gt;Processing Frameworks&lt;/strong&gt;: Apache Spark, Hive, Flink, Kafka  &lt;/li&gt;&lt;li&gt;&lt;strong&gt;Scheduling&lt;/strong&gt;: Apache Airflow, Oozie, Luigi  &lt;/li&gt;&lt;li&gt;&lt;strong&gt;Cloud Platforms&lt;/strong&gt;: AWS, Azure, GCP &lt;/li&gt;&lt;li&gt; &lt;strong&gt;Programming&lt;/strong&gt;: Python, Java, Scala&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Programming&lt;/strong&gt;: Python, R  &lt;/li&gt;&lt;li&gt;&lt;strong&gt;Visualization&lt;/strong&gt;: Tableau, Power BI, Matplotlib, Seaborn  &lt;/li&gt;&lt;li&gt;&lt;strong&gt;ML Frameworks&lt;/strong&gt;: TensorFlow, PyTorch  &lt;/li&gt;&lt;li&gt;&lt;strong&gt;Big Data&lt;/strong&gt;: Hadoop, Spark  &lt;/li&gt;&lt;li&gt;&lt;strong&gt;Statistical Software&lt;/strong&gt;: SAS, MATLAB &lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Skill Focus&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;System design, data pipeline creation, and optimization.&lt;/td&gt;&#xA;          &lt;td&gt;Data analysis, statistical modeling, and advanced machine learning.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Collaboration Role&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Provides the infrastructure and tools necessary for data scientists to perform their analyses effectively.&lt;/td&gt;&#xA;          &lt;td&gt;Leverages the infrastructure to derive actionable insights and guide business decisions.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;&#xA;&lt;p&gt;Data engineers and data scientists serve distinct but complementary roles in any data-driven organization. Engineers handle the foundational infrastructure, enabling scientists to focus on deriving valuable insights. Together, they drive the success of data initiatives.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to invoke a method in the jar?</title>
      <link>http://localhost:1313/tech/2022-08-12-how-to-invoke-a-method-in-the-jar/</link>
      <pubDate>Fri, 12 Aug 2022 12:00:00 +0000</pubDate>
      <guid>http://localhost:1313/tech/2022-08-12-how-to-invoke-a-method-in-the-jar/</guid>
      <description>&lt;p&gt;We can use &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/net/URLClassLoader.html&#34;&gt;URLClassLoader&lt;/a&gt; to load classes from a given path.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      URL myJar &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; File(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;jar/LibraryA-1.0-SNAPSHOT.jar&amp;#34;&lt;/span&gt;).&lt;span style=&#34;color:#50fa7b&#34;&gt;toURI&lt;/span&gt;().&lt;span style=&#34;color:#50fa7b&#34;&gt;toURL&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      URLClassLoader clsLoader &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; URLClassLoader(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; URL&lt;span style=&#34;color:#ff79c6&#34;&gt;[]&lt;/span&gt; {myJar},&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#50fa7b&#34;&gt;getClass&lt;/span&gt;().&lt;span style=&#34;color:#50fa7b&#34;&gt;getClassLoader&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      Class&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;?&amp;gt;&lt;/span&gt; loadedClass &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; clsLoader.&lt;span style=&#34;color:#50fa7b&#34;&gt;loadClass&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;com.sean.liba.Main&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      Method method &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; loadedClass.&lt;span style=&#34;color:#50fa7b&#34;&gt;getDeclaredMethod&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;print&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      Object instance &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; loadedClass.&lt;span style=&#34;color:#50fa7b&#34;&gt;newInstance&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      method.&lt;span style=&#34;color:#50fa7b&#34;&gt;invoke&lt;/span&gt;(instance);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#6272a4&#34;&gt;// Output: Hello World!&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Let&amp;rsquo;s look at other use cases. What if you have two jars, and &lt;strong&gt;liba.jar&lt;/strong&gt; deppends on another class in the &lt;strong&gt;libb.jar&lt;/strong&gt;?&lt;/p&gt;&#xA;&lt;p&gt;&#xA;  &lt;img src=&#34;http://localhost:1313/img/tech/2022-08-12/1.png&#34; alt=&#34;&#34;&gt;&#xA;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;Take the above example, the &lt;code&gt;print&lt;/code&gt; method has a dependency on the &lt;code&gt;com.sean.libb.Caculator&lt;/code&gt; class.&#xA;If we dont&amp;rsquo;t change the code, and run it again, you will get an error immediately.&lt;/p&gt;</description>
    </item>
    <item>
      <title>[Elasticsearch] Working with disjunction max query - dis_max</title>
      <link>http://localhost:1313/tech/2022-05-27-elasticsearch-working-with-disjunction-max-query---dis_max-copy/</link>
      <pubDate>Fri, 27 May 2022 12:00:00 +0000</pubDate>
      <guid>http://localhost:1313/tech/2022-05-27-elasticsearch-working-with-disjunction-max-query---dis_max-copy/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GET /_search&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;query&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;dis_max&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;queries&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        { &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;term&amp;#34;&lt;/span&gt;: { &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;iphone&amp;#34;&lt;/span&gt; } },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        { &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;term&amp;#34;&lt;/span&gt;: { &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;body&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;iphone&amp;#34;&lt;/span&gt; } }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      ],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#6272a4&#34;&gt;// &amp;#34;tie_breaker&amp;#34;: 0.7&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is the official document written about &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-dis-max-query.html#query-dsl-dis-max-query&#34;&gt;dis_max&lt;/a&gt;:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Returns documents matching one or more wrapped queries, called query clauses or clauses.&lt;/p&gt;&#xA;&lt;p&gt;If a returned document matches multiple query clauses, the dis_max query assigns the document the highest relevance score from any matching clause, plus a tie breaking increment for any additional matching subqueries.&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>[Elasticsearch] How to use minimum_should_match and operator with match query?</title>
      <link>http://localhost:1313/tech/2022-05-26-elasticsearch-how-to-use-minimum_should_match-and-operator-with-match-query/</link>
      <pubDate>Thu, 26 May 2022 12:00:00 +0000</pubDate>
      <guid>http://localhost:1313/tech/2022-05-26-elasticsearch-how-to-use-minimum_should_match-and-operator-with-match-query/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GET /_search&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;query&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;match&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;query&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;this is a test yo&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6272a4&#34;&gt;// &amp;#34;operator&amp;#34;: &amp;#34;or&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;      }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is the Match query we see quite often when using ES. However, if you did specify an analyzer during mapping, the query “this is a test yo&amp;quot; will likely be tokenized into five terms ”&lt;strong&gt;this&lt;/strong&gt;”, “&lt;strong&gt;is&lt;/strong&gt;”, “&lt;strong&gt;a&lt;/strong&gt;”, “&lt;strong&gt;test&lt;/strong&gt;”, and “&lt;strong&gt;yo&lt;/strong&gt;” in the search phases. And there is an implicit parameter &lt;strong&gt;operator&lt;/strong&gt;, and its default value is “&lt;strong&gt;or&lt;/strong&gt;”. This means, this query will look up the documents in the index, and whenever there is any term match in the message of a doc, then that it’s a match!&lt;/p&gt;</description>
    </item>
    <item>
      <title>How To Get A List Of Sheet Names In Google Sheets With Script?</title>
      <link>http://localhost:1313/tech/2022-01-28-how-to-get-a-list-of-sheet-names-in-google-sheets-with-script/</link>
      <pubDate>Fri, 28 Jan 2022 12:00:00 +0000</pubDate>
      <guid>http://localhost:1313/tech/2022-01-28-how-to-get-a-list-of-sheet-names-in-google-sheets-with-script/</guid>
      <description>&lt;p&gt;There&amp;rsquo;s no built-in formula to do this, and we have to write our own script with Google&amp;rsquo;s Apps Script to achieve the function.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;First, go to the Extensions → Apps Script.&#xA;&#xA;  &lt;img src=&#34;http://localhost:1313/img/tech/2022-05-26/1.png&#34; alt=&#34;&#34;&gt;&#xA;&#xA;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Second, write our own method getSheetsName in the Apps Script console, and save.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&#xA;  &lt;img src=&#34;http://localhost:1313/img/tech/2022-05-26/2.png&#34; alt=&#34;&#34;&gt;&#xA;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;Code snippets:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;function&lt;/span&gt; getSheetsName() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;var&lt;/span&gt; sheetNames &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;Array&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;var&lt;/span&gt; sheets &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; SpreadsheetApp.getActiveSpreadsheet().getSheets();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;var&lt;/span&gt; i&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt; ; i&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;sheets.length ; i&lt;span style=&#34;color:#ff79c6&#34;&gt;++&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sheetNames.push( [ sheets[i].getName() ] )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; sheetNames&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then go back to your sheet, and type the formula with the function name we just created in the Apps Script.&lt;/p&gt;</description>
    </item>
    <item>
      <title>[Elasticsearch] Function score query</title>
      <link>http://localhost:1313/tech/2022-01-07-elasticsearch-function-score-query/</link>
      <pubDate>Fri, 07 Jan 2022 12:00:00 +0000</pubDate>
      <guid>http://localhost:1313/tech/2022-01-07-elasticsearch-function-score-query/</guid>
      <description>&lt;p&gt;By reading the official document of the &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-function-score-query.html#function-weight&#34;&gt;Function score query&lt;/a&gt;, I still couldn&amp;rsquo;t get a sense of how to use it correctly. After reading through more articles written by others, here&amp;rsquo;s how I interpret it with the formula of the newly computed score:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;function_score = min(score_mode(f1_score, f2_score, ...), max_boost)&#xA;_score = boost_mode(boost*query_score, function_score)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example 1:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;query&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;function_score&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;query&amp;#34;&lt;/span&gt;: { &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;match_all&amp;#34;&lt;/span&gt;: {} },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;boost&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;5&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;random_score&amp;#34;&lt;/span&gt;: {}, &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;boost_mode&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;multiply&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Score:&lt;/p&gt;</description>
    </item>
    <item>
      <title>[Prometheus] What is the difference between rate and irate</title>
      <link>http://localhost:1313/tech/2021-12-21-prometheus-what-is-the-difference-between-rate-and-irate/</link>
      <pubDate>Tue, 21 Dec 2021 12:00:00 +0000</pubDate>
      <guid>http://localhost:1313/tech/2021-12-21-prometheus-what-is-the-difference-between-rate-and-irate/</guid>
      <description>&lt;p&gt;Here are the definitions from the official document for &lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/querying/functions/#rate&#34;&gt;rate()&lt;/a&gt; and &lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/querying/functions/#irate&#34;&gt;irate()&lt;/a&gt;. But if you still don’t quite understand, check the examples below.&lt;/p&gt;&#xA;&lt;p&gt;In this example, I select all the values I have recorded within the last 1 minute for all time series that have the metric name prometheus_http_requests_total and a handler label set to /metrics:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;prometheus_http_requests_total{handler=”/metrics”}[1m]&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Output from the Prometheus UI:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# Element&#xA;prometheus_http_requests_total{code=&amp;#34;200&amp;#34;,handler=&amp;#34;/metrics&amp;#34;,instance=&amp;#34;localhost:9090&amp;#34;,job=&amp;#34;prometheus&amp;#34;}&#xA;# ValueHere are the definitions from the official document for rate() and irate(). But if you still don’t quite understand, check the examples below.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In this example, I select all the values I have recorded within the last 1 minute for all time series that have the metric name prometheus_http_requests_total and a handler label set to /metrics:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Useful commands for zsh</title>
      <link>http://localhost:1313/tech/2021-11-20-useful-commands-for-zsh/</link>
      <pubDate>Tue, 30 Nov 2021 12:00:00 +0000</pubDate>
      <guid>http://localhost:1313/tech/2021-11-20-useful-commands-for-zsh/</guid>
      <description>&lt;h1 id=&#34;moving-thecursor&#34;&gt;Moving the cursor&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Ctrl+A: To move to the beginning of the current line.&lt;/li&gt;&#xA;&lt;li&gt;Ctrl+E: To move to the end of the current line.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;manipulating-yourtyping&#34;&gt;Manipulating your typing&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Ctrl+W: To delete the word in front of the cursor.&lt;/li&gt;&#xA;&lt;li&gt;Ctrl+U: To clear the entire line.&lt;/li&gt;&#xA;&lt;li&gt;Ctrl+K: To clear the characters on the line after the current cursor position.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>How to cherry-pick a commit from another git repository?</title>
      <link>http://localhost:1313/tech/2021-09-02-how-to-cherry-pick-a-commit-from-another-git-repository/</link>
      <pubDate>Thu, 02 Sep 2021 12:00:00 +0000</pubDate>
      <guid>http://localhost:1313/tech/2021-09-02-how-to-cherry-pick-a-commit-from-another-git-repository/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# Adding (as &amp;#34;other&amp;#34;) the repo from we want to cherry-pick&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git remote add other git://github.com/username/repo.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# Fetch the &amp;#34;other&amp;#34; branch&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git fetch other&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# Cherry-pick the commit we need&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git cherry-pick &lt;span style=&#34;color:#bd93f9&#34;&gt;0549522&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/about/</guid>
      <description>&lt;h2 id=&#34;about-me&#34;&gt;About Me&lt;/h2&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/search/placeholder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/search/placeholder/</guid>
      <description></description>
    </item>
    <item>
      <title>Posts Archive</title>
      <link>http://localhost:1313/archive/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/archive/</guid>
      <description></description>
    </item>
  </channel>
</rss>
